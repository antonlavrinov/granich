// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Manifest> component should render correctly 1`] = `
<styled.section>
  <styled.div>
    <ForwardRef
      pose={
        Array [
          "shake",
        ]
      }
      poseKey={3}
    >
      <styled.div>
        <styled.div>
          <styled.div>
            <span>
              Оставьте почту,
            </span>
             чтобы узнать о наборах на курсы, мастер-классы и новом бесплатном контенте. Без спама.
          </styled.div>
          <Formik
            initialValues={
              Object {
                "formParams": Object {
                  "email": "",
                },
                "politikaCheckbox": true,
              }
            }
            isInitialValid={[Function]}
            onSubmit={[Function]}
            validationSchema={
              ObjectSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_defaultDefault": [Function],
                "_deps": Array [],
                "_excludedEdges": Array [],
                "_exclusive": Object {},
                "_mutate": undefined,
                "_nodes": Array [
                  "formParams",
                ],
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "object",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "fields": Object {
                  "formParams": ObjectSchema {
                    "_blacklist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "_conditions": Array [],
                    "_defaultDefault": [Function],
                    "_deps": Array [],
                    "_excludedEdges": Array [],
                    "_exclusive": Object {},
                    "_mutate": undefined,
                    "_nodes": Array [
                      "email",
                    ],
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "object",
                    "_typeError": [Function],
                    "_whitelist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "fields": Object {
                      "email": StringSchema {
                        "_blacklist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "email": false,
                          "required": true,
                        },
                        "_mutate": undefined,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                        "type": "string",
                      },
                    },
                    "tests": Array [],
                    "transforms": Array [
                      [Function],
                    ],
                    "type": "object",
                  },
                },
                "tests": Array [],
                "transforms": Array [
                  [Function],
                ],
                "type": "object",
              }
            }
          >
            <Component />
          </Formik>
        </styled.div>
      </styled.div>
    </ForwardRef>
  </styled.div>
</styled.section>
`;
